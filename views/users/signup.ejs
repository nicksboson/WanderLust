<%- include("../partials/header") %>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg border-0 rounded-4">
                <div class="card-body p-5">                    <h2 class="text-center mb-4 fw-bold text-success" style="color: red !important;">Create Account</h2>
                    
                    <!-- Google Sign In Button - Temporarily disabled -->
                    <div class="d-grid gap-2 mb-4">
                        <button class="btn btn-outline-dark rounded-pill" disabled>
                            <img src="https://www.google.com/favicon.ico" alt="Google" style="width: 20px; margin-right: 10px;">
                            Continue with Google (Coming Soon)
                        </button>
                    </div>

                    <div class="d-flex align-items-center mb-4">
                        <hr class="flex-grow-1">
                        <span class="mx-3 text-muted">or</span>
                        <hr class="flex-grow-1">
                    </div>

                    <form action="/signup" method="POST" class="needs-validation" novalidate>
                        <div class="mb-4">
                            <label for="username" class="form-label fw-semibold">Username</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light">
                                    <i class="bi bi-person-fill text-success"></i>
                                </span>
                                <input type="text" class="form-control rounded-end" id="username" name="username" placeholder="Choose a username" required minlength="3" maxlength="20">
                            </div>
                            <span class="validation-feedback text-danger d-block" id="usernameFeedback"></span>
                        </div>
                        <div class="mb-4">
                            <label for="email" class="form-label fw-semibold">Email</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light">
                                    <i class="bi bi-envelope-fill text-success"></i>
                                </span>
                                <input type="email" class="form-control rounded-end" id="email" name="email" placeholder="Enter your email" required pattern="^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$">
                            </div>
                            <span class="validation-feedback text-danger d-block" id="emailFeedback"></span>
                        </div>
                        <div class="mb-4">
                            <label for="password" class="form-label fw-semibold">Password</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light">
                                    <i class="bi bi-lock-fill text-success"></i>
                                </span>
                                <input type="password" class="form-control rounded-end" id="password" name="password" placeholder="Create a password" required minlength="8">
                            </div>
                            <span class="validation-feedback text-danger d-block" id="passwordFeedback"></span>
                        </div>
                        <div class="mb-4">
                            <label for="confirmPassword" class="form-label fw-semibold">Confirm Password</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light">
                                    <i class="bi bi-lock-fill text-success"></i>
                                </span>
                                <input type="password" class="form-control rounded-end" id="confirmPassword" name="confirmPassword" placeholder="Confirm your password" required>
                            </div>
                            <span class="validation-feedback text-danger d-block" id="confirmPasswordFeedback"></span>
                        </div>
                        <div class="d-grid gap-2 mt-5">
                            <button class="btn btn-success btn-lg rounded-pill fw-semibold" type="submit">
                                Create Account
                            </button>
                        </div>
                    </form>
                    <div class="text-center mt-4">
                        <p class="text-muted">Already have an account? 
                            <a href="/login" class="text-success text-decoration-none fw-semibold" style="color: red !important;">Login</a>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

<style>
body {
    background: #f5f6fa;
}

.container {
    max-width: 480px;
}

.card {
    border: none;
    border-radius: 20px;
    box-shadow: 0 8px 32px rgba(0,0,0,0.10);
    background: #fff;
    margin-top: 2.5rem;
}

.card-body {
    padding: 2.5rem 2rem 2rem 2rem;
}

h2 {
    font-size: 2.1rem;
    font-weight: 800;
    color: #2563eb;
    letter-spacing: 1px;
    margin-bottom: 1.5rem;
}

.input-group-text {
    border: none;
    background: #f0f1f6;
    color: #2563eb;
    font-size: 1.2rem;
}

.form-control {
    border-left: none;
    border-radius: 0 12px 12px 0 !important;
    background: #f8f9fa;
    font-size: 1.08rem;
    padding: 0.85rem 1rem;
    transition: box-shadow 0.2s;
}

.form-control:focus {
    border-color: #2563eb;
    box-shadow: 0 0 0 0.18rem rgba(37, 99, 235, 0.13);
    background: #fff;
}

.input-group .form-control {
    border-left: none;
}

.input-group .input-group-text {
    border-radius: 12px 0 0 12px !important;
}

.btn-success, .btn-outline-success {
    border-radius: 12px;
    font-weight: 700;
    font-size: 1.1rem;
    padding: 0.9rem 0;
    transition: all 0.2s;
    box-shadow: 0 2px 8px rgba(37,99,235,0.07);
    border: none;
    background: #2563eb;
}

.btn-success:hover, .btn-outline-success:hover {
    background: #1d4ed8;
    color: #fff;
    transform: translateY(-2px) scale(1.03);
    box-shadow: 0 4px 16px rgba(37,99,235,0.13);
}

.btn-outline-dark {
    border-radius: 12px;
    font-weight: 600;
    font-size: 1.05rem;
    padding: 0.8rem 0;
    background: #f8f9fa;
    color: #222;
    border: 1.5px solid #d1d5db;
    transition: all 0.2s;
}

.btn-outline-dark:disabled {
    opacity: 0.7;
}

.btn-outline-dark:hover {
    background: #e9ecef;
    color: #222;
    border-color: #bfc9d1;
}

.form-label {
    font-weight: 600;
    color: #222;
    margin-bottom: 0.3rem;
}

.form-check-label {
    font-size: 1rem;
    color: #555;
}

.form-check-input:checked {
    background-color: #2563eb;
    border-color: #2563eb;
}

.form-check-input:focus {
    border-color: #2563eb;
    box-shadow: 0 0 0 0.18rem rgba(37, 99, 235, 0.13);
}

.validation-feedback {
    font-size: 0.97rem;
    margin-top: 0.2rem;
}

.text-success {
    color: #2563eb !important;
}

.text-muted {
    color: #7b8a97 !important;
    font-size: 1.05rem;
}

a.text-success {
    text-decoration: underline;
    transition: color 0.2s;
}

a.text-success:hover {
    color: #1d4ed8 !important;
}

.d-grid .btn {
    margin-bottom: 0.5rem;
}

@media (max-width: 768px) {
    .container {
        padding: 0 0.5rem;
    }
    .card-body {
        padding: 1.2rem 0.7rem;
    }
    h2 {
        font-size: 1.5rem;
    }
}

@media (max-width: 480px) {
  .container {
    max-width: 100% !important;
    padding: 0 0.2rem !important;
  }
  .card, .card-body {
    padding: 0.7rem 0.3rem !important;
  }
  h1, h2, h3 {
    font-size: 1.1rem !important;
  }
  .btn, .btn-lg {
    font-size: 1rem !important;
    padding: 0.7rem 0.5rem !important;
  }
}
</style>

<script>
    // Form validation
    (function () {
        'use strict'
        var forms = document.querySelectorAll('.needs-validation')

        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                const usernameInput = form.querySelector('#username');
                const emailInput = form.querySelector('#email');
                const passwordInput = form.querySelector('#password');
                const confirmPasswordInput = form.querySelector('#confirmPassword');

                if (usernameInput) {
                    usernameInput.addEventListener('input', function() {
                        validateField(usernameInput, 'usernameFeedback', 'Please choose a username between 3 and 20 characters.');
                    });
                }
                if (emailInput) {
                    emailInput.addEventListener('input', function() {
                        validateField(emailInput, 'emailFeedback', 'Please provide a valid email address.');
                    });
                }
                if (passwordInput) {
                    passwordInput.addEventListener('input', function() {
                        validatePasswordStrength(passwordInput);
                        validatePasswordMatch(passwordInput, confirmPasswordInput);
                    });
                }
                if (confirmPasswordInput) {
                    confirmPasswordInput.addEventListener('input', function() {
                        validatePasswordMatch(passwordInput, confirmPasswordInput);
                    });
                }

                form.addEventListener('submit', function (event) {
                    let formIsValid = true;

                    if (usernameInput) {
                        if (!validateField(usernameInput, 'usernameFeedback', 'Please choose a username between 3 and 20 characters.')) formIsValid = false;
                    }
                    if (emailInput) {
                        if (!validateField(emailInput, 'emailFeedback', 'Please provide a valid email address.')) formIsValid = false;
                    }
                    if (passwordInput) {
                        if (!validatePasswordStrength(passwordInput)) formIsValid = false;
                    }
                    if (passwordInput && confirmPasswordInput) {
                        if (!validatePasswordMatch(passwordInput, confirmPasswordInput)) formIsValid = false;
                    }
                    
                    if (!formIsValid || !form.checkValidity()) { // Ensure both custom and built-in validation pass
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated'); // Keep for Bootstrap default styling

                }, false)
            })

        function validateField(input, feedbackId, defaultMessage) {
            const feedbackElement = document.getElementById(feedbackId);
            if (!feedbackElement) return true; // Return true if no feedback element found (shouldn't happen)

            if (!input.checkValidity()) {
                input.classList.add('is-invalid');
                input.classList.remove('is-valid');
                feedbackElement.textContent = input.validationMessage || defaultMessage; // Use browser default or custom
                feedbackElement.style.display = 'block';
                return false;
            } else {
                input.classList.remove('is-invalid');
                input.classList.add('is-valid');
                feedbackElement.textContent = '';
                feedbackElement.style.display = 'none';
                return true;
            }
        }

        function validatePasswordStrength(passwordInput) {
            if (!passwordInput) return true;
            const feedbackElement = document.getElementById('passwordFeedback');
            if (!feedbackElement) return true;

            const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()_+={}\[\]|\\;:'",.<>/?`~-]).{8,}$/;
            if (!passwordPattern.test(passwordInput.value)) {
                passwordInput.setCustomValidity('Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one number, and one special character.');
                passwordInput.classList.add('is-invalid');
                passwordInput.classList.remove('is-valid');
                feedbackElement.textContent = passwordInput.validationMessage;
                feedbackElement.style.display = 'block';
                return false;
            } else {
                passwordInput.setCustomValidity('');
                passwordInput.classList.remove('is-invalid');
                passwordInput.classList.add('is-valid');
                feedbackElement.textContent = '';
                feedbackElement.style.display = 'none';
                return true;
            }
        }

        function validatePasswordMatch(passwordInput, confirmPasswordInput) {
            if (!passwordInput || !confirmPasswordInput) return true;
            const feedbackElement = document.getElementById('confirmPasswordFeedback');
            if (!feedbackElement) return true;

            if (passwordInput.value !== confirmPasswordInput.value) {
                confirmPasswordInput.setCustomValidity('Passwords do not match.');
                confirmPasswordInput.classList.add('is-invalid');
                confirmPasswordInput.classList.remove('is-valid');
                feedbackElement.textContent = confirmPasswordInput.validationMessage;
                feedbackElement.style.display = 'block';
                return false;
            } else {
                confirmPasswordInput.setCustomValidity('');
                confirmPasswordInput.classList.remove('is-invalid');
                confirmPasswordInput.classList.add('is-valid');
                feedbackElement.textContent = '';
                feedbackElement.style.display = 'none';
                return true;
            }
        }

    })()
</script>

<%- include("../partials/footer") %>
